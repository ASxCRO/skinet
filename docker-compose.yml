networks:
  my_network:
    driver: bridge
services:
  skinet:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:8080"
    depends_on:
      - redis
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      Token__Key: "CHANGE ME TO SOMETHING SECURE"
      Token__Issuer: "http://REPLACE_ME"
      StripeSettings__PublishibleKey: "REPLACE_ME"
      StripeSettings__SecretKey: "REPLACE_ME"
      StripeSettings__WhSecret: "REPLACE_ME"
      ConnectionStrings__DefaultConnection: "Server=db;Port=5432;User Id=appuser;Password=secret;Database=skinet"
      ConnectionStrings__IdentityConnection: "Server=db;Port=5432;User Id=appuser;Password=secret;Database=identity"
      ConnectionStrings__Redis: "redis"
      ApiUrl: "http://113.30.189.225/Content/"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=root
      - HTTP_PASSWORD=secret
    ports:
      - "8081:8081"
    depends_on:
      - redis

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: appuser
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/data

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    networks:
      - my_network
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  redis-data:
  postgres-data:
  portainer_data:
